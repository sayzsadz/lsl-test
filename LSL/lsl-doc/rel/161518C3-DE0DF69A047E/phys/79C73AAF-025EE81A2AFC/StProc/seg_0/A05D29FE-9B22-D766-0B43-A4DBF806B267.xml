<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="CHECK_PRODUCT" directorySegmentName="seg_0" id="A05D29FE-9B22-D766-0B43-A4DBF806B267">
<sourceConnName>LSL_Cloud_apex</sourceConnName>
<sourceObjSchema>APEX</sourceObjSchema>
<sourceObjName>CHECK_PRODUCT</sourceObjName>
<createdBy>sjayasinghe1</createdBy>
<createdTime>2019-04-29 11:48:23 UTC</createdTime>
<ownerDesignName>lsl-doc</ownerDesignName>
<owner>FB5DE12D-4EA4-254B-AA97-4ED35945C6A7</owner>
<source>CREATE OR REPLACE PROCEDURE APEX.CHECK_PRODUCT (p_data IN  CLOB, p_msg OUT varchar2)&lt;br/&gt;AS&lt;br/&gt;&lt;br/&gt;  lv_PRODUCTID      number;&lt;br/&gt;  lv_PRODUCTNUMBER  number;&lt;br/&gt;  v_msg             varchar2(100);&lt;br/&gt;  V_PartNumber	    varchar2(100);&lt;br/&gt;  V_Title	        varchar2(100);&lt;br/&gt;  V_ProductCategory varchar2(100);&lt;br/&gt;  v_attribute10     varchar2(100);&lt;br/&gt;  l_data            varchar2(20000);&lt;br/&gt;  l_ProductCategory varchar2(200);&lt;br/&gt;  l_SellTaxCode     varchar2(200);&lt;br/&gt;  l_PurchaseTaxCode varchar2(200);&lt;br/&gt;  l_UnitType        varchar2(200);&lt;br/&gt;  l_CurrentPriceEx  number;&lt;br/&gt;  l_CurrentPriceTax number;&lt;br/&gt;  l_SupplierId      varchar2(200);&lt;br/&gt;  l_BuyCost         number;&lt;br/&gt;  l_BuyCostTax      number;&lt;br/&gt;  l_PartNumber      varchar2(100);&lt;br/&gt;  &lt;br/&gt;        l_seg1 varchar2(100) := &apos;Unspecified&apos;;&lt;br/&gt;        l_seg2 varchar2(100) := &apos;Unspecified&apos;;&lt;br/&gt;        l_seg3 varchar2(100) := &apos;Unspecified&apos;;&lt;br/&gt;        l_seg4 varchar2(100) := &apos;Unspecified&apos;;&lt;br/&gt;  &lt;br/&gt;&lt;br/&gt;BEGIN&lt;br/&gt;    &lt;br/&gt;    l_data := p_data;&lt;br/&gt;    &lt;br/&gt;    BEGIN&lt;br/&gt;        SELECT count(attribute10) cnt&lt;br/&gt;        INTO lv_PRODUCTID&lt;br/&gt;        FROM mtl_system_items_b@DBLINK2&lt;br/&gt;        WHERE attribute10 = (&lt;br/&gt;        SELECT PRODUCTID&lt;br/&gt;        FROM &lt;br/&gt;             JSON_TABLE(&lt;br/&gt;                l_data&lt;br/&gt;             , &apos;$[*]&apos; COLUMNS (&lt;br/&gt;              ProductId VARCHAR2(100) PATH &apos;$.ProductId&apos;&lt;br/&gt;        ))&lt;br/&gt;        );&lt;br/&gt;&lt;br/&gt;	SELECT count(segment1) cnt&lt;br/&gt;        INTO lv_PRODUCTNUMBER&lt;br/&gt;        FROM mtl_system_items_b@DBLINK2&lt;br/&gt;        WHERE segment1 = (&lt;br/&gt;        SELECT PartNumber &lt;br/&gt;        FROM &lt;br/&gt;             JSON_TABLE(&lt;br/&gt;                l_data&lt;br/&gt;             , &apos;$[*]&apos; COLUMNS (&lt;br/&gt;              PartNumber VARCHAR2(100) PATH &apos;$.PartNumber&apos;&lt;br/&gt;        ))&lt;br/&gt;        );&lt;br/&gt;&lt;br/&gt;    DBMS_OUTPUT.PUT_LINE(&apos;1&apos;);&lt;br/&gt;    &lt;br/&gt;     IF lv_PRODUCTNUMBER = 0&lt;br/&gt;     THEN&lt;br/&gt;&lt;br/&gt;        SELECT ProductCategory&lt;br/&gt;        into V_ProductCategory&lt;br/&gt;        FROM &lt;br/&gt;             JSON_TABLE(&lt;br/&gt;                l_data&lt;br/&gt;             , &apos;$[*]&apos; COLUMNS (&lt;br/&gt;              ProductCategory VARCHAR2(100) PATH &apos;$.ProductCategory&apos;&lt;br/&gt;        )&lt;br/&gt;        );&lt;br/&gt;        &lt;br/&gt;        DBMS_OUTPUT.PUT_LINE(&apos;2&apos;);&lt;br/&gt;&lt;br/&gt;        SELECT PartNumber, Title, ProductId, ProductCategory, SellTaxCode, PurchaseTaxCode, UnitType, CurrentPriceEx, CurrentPriceTax, SupplierId, BuyCost, BuyCostTax, PartNumber1&lt;br/&gt;        into V_PartNumber, V_Title, v_attribute10, l_ProductCategory, l_SellTaxCode, l_PurchaseTaxCode, l_UnitType, l_CurrentPriceEx, l_CurrentPriceTax, l_SupplierId, l_BuyCost, l_BuyCostTax, l_PartNumber&lt;br/&gt;        FROM &lt;br/&gt;             JSON_TABLE(&lt;br/&gt;                l_data&lt;br/&gt;             , &apos;$[*]&apos; COLUMNS (&lt;br/&gt;                                PartNumber 	    VARCHAR2(100) PATH &apos;$.PartNumber&apos;,&lt;br/&gt;                                Title 		    VARCHAR2(100) PATH &apos;$.Title&apos;,&lt;br/&gt;                                ProductId       VARCHAR2(100) PATH &apos;$.ProductId&apos;,&lt;br/&gt;                                ProductCategory VARCHAR2(100) PATH &apos;$.ProductCategory&apos;,&lt;br/&gt;                                SellTaxCode     VARCHAR2(100) PATH &apos;$.SellTaxCode&apos;,&lt;br/&gt;                                PurchaseTaxCode VARCHAR2(100) PATH &apos;$.PurchaseTaxCode&apos;,&lt;br/&gt;                                UnitType        VARCHAR2(100) PATH &apos;$.UnitType&apos;,&lt;br/&gt;                                CurrentPriceEx  VARCHAR2(100) PATH &apos;$.CurrentPriceEx&apos;,&lt;br/&gt;                                CurrentPriceTax VARCHAR2(100) PATH &apos;$.CurrentPriceTax&apos;&lt;br/&gt;            ,NESTED PATH  &apos;$.Suppliers[*]&apos; COLUMNS (&lt;br/&gt;                                                    SupplierId   number       PATH &apos;$.SupplierId&apos;,&lt;br/&gt;                                                    BuyCost      number       PATH &apos;$.BuyCost&apos;,&lt;br/&gt;                                                    BuyCostTax   number       PATH &apos;$.BuyCostTax&apos;,&lt;br/&gt;                                                    PartNumber1   number      PATH &apos;$.PartNumber&apos;&lt;br/&gt;                                                    )&lt;br/&gt;        ))&lt;br/&gt;        ;&lt;br/&gt;        &lt;br/&gt;        DBMS_OUTPUT.PUT_LINE(&apos;3&apos;);&lt;br/&gt;       &lt;br/&gt;          BEGIN&lt;br/&gt;              FOR loop_seg IN&lt;br/&gt;                              (SELECT rn, seg, RANK() OVER (PARTITION BY seg ORDER BY rn) AS myrank FROM&lt;br/&gt;                            (&lt;br/&gt;                                select rownum rn, regexp_substr(l_ProductCategory,&apos;[^&gt;]+&apos;, 1, level) seg&lt;br/&gt;                                from dual&lt;br/&gt;                                connect by regexp_substr(l_ProductCategory, &apos;[^&gt;]+&apos;, 1, level) is not null&lt;br/&gt;                            )&lt;br/&gt;                            order by 1)&lt;br/&gt;              LOOP&lt;br/&gt;                if loop_seg.rn = 1&lt;br/&gt;                    then&lt;br/&gt;                        l_seg1 := loop_seg.seg;&lt;br/&gt;                elsif loop_seg.rn = 2&lt;br/&gt;                    then&lt;br/&gt;                        l_seg2 := loop_seg.seg;&lt;br/&gt;                elsif loop_seg.rn = 3&lt;br/&gt;                    then&lt;br/&gt;                        l_seg3 := loop_seg.seg;&lt;br/&gt;                elsif loop_seg.rn = 4&lt;br/&gt;                    then&lt;br/&gt;                        l_seg4 := loop_seg.seg;&lt;br/&gt;                end if;&lt;br/&gt;              END LOOP loop_seg;&lt;br/&gt;                  l_ProductCategory := l_seg1||&apos;.&apos;||l_seg2||&apos;.&apos;||l_seg3||&apos;.&apos;||l_seg4;&lt;br/&gt;        END;&lt;br/&gt;        DBMS_OUTPUT.PUT_LINE(&apos;4&apos;);&lt;br/&gt;        if l_ProductCategory = &apos;Unspecified.Unspecified.Unspecified.Unspecified&apos;&lt;br/&gt;            then&lt;br/&gt;        &lt;br/&gt;                select &apos;GROCERY&apos;||&apos;.&apos;||&apos;Food Items&apos;||&apos;.&apos;||&apos;Canned Food&apos;||&apos;.&apos;||&apos;Canned Food&apos;&lt;br/&gt;                into l_ProductCategory&lt;br/&gt;                from dual;&lt;br/&gt;        end if;&lt;br/&gt;DBMS_OUTPUT.PUT_LINE(&apos;5&apos;);&lt;br/&gt;		XXPBSA_PROCESS_ITEMS@DBLINK2(&lt;br/&gt;         p_Transaction_Type      =&gt; &apos;CREATE&apos;,&lt;br/&gt;         p_Segment1              =&gt; V_PartNumber,&lt;br/&gt;         p_Description           =&gt; V_Title,&lt;br/&gt;         p_Organization_Code     =&gt; &apos;SIO&apos;,&lt;br/&gt;         p_template_name         =&gt; &apos;@Product Family&apos;,&lt;br/&gt;         p_attribute10           =&gt; v_attribute10,--l_ProductCategory, l_SellTaxCode, l_PurchaseTaxCode, l_UnitType, l_CurrentPriceEx, l_CurrentPriceTax, l_SupplierId, l_BuyCost, l_BuyCostTax, l_PartNumber&lt;br/&gt;         p_attribute11           =&gt; l_ProductCategory,&lt;br/&gt;         p_attribute12           =&gt; l_SellTaxCode,&lt;br/&gt;         p_attribute13           =&gt; l_PurchaseTaxCode,&lt;br/&gt;         p_attribute14           =&gt; l_UnitType,&lt;br/&gt;         p_attribute15           =&gt; l_CurrentPriceEx,&lt;br/&gt;         p_attribute16           =&gt; l_CurrentPriceTax,&lt;br/&gt;         p_attribute17           =&gt; l_SupplierId,&lt;br/&gt;         p_attribute18           =&gt; l_BuyCost,&lt;br/&gt;         p_attribute19           =&gt; l_BuyCostTax,&lt;br/&gt;         p_attribute20           =&gt; l_PartNumber&lt;br/&gt;		);&lt;br/&gt;        DBMS_OUTPUT.PUT_LINE(&apos;6&apos;);&lt;br/&gt;       -- XXPBSA_AssignItmToCat@DBLINK2(p_segment1 =&gt; V_PartNumber, p_category_set_name =&gt;&apos;Inventory&apos; , p_category_name =&gt; l_ProductCategory);&lt;br/&gt;--       begin&lt;br/&gt;--        XXPBSA_AssignItmToCat@DBLINK2(&apos;ABC1234567891235&apos;, &apos;Inventory&apos;, &apos;GROCERY.Cold Chain.Frozen Food.Frozen Fish&apos;);&lt;br/&gt;--        commit;&lt;br/&gt;--       exception&lt;br/&gt;--        when others&lt;br/&gt;--            then&lt;br/&gt;--                DBMS_OUTPUT.PUT_LINE(&apos;done&apos;);&lt;br/&gt;--       end;&lt;br/&gt;&lt;br/&gt;            select &apos;successful operation&apos;&lt;br/&gt;            into v_msg&lt;br/&gt;            from dual;&lt;br/&gt;&lt;br/&gt;            p_msg :=  v_msg;&lt;br/&gt;&lt;br/&gt;      END IF;&lt;br/&gt;        EXCEPTION&lt;br/&gt;          WHEN OTHERS THEN&lt;br/&gt;            select &apos;unsuccessful operation1&apos;&lt;br/&gt;            into v_msg&lt;br/&gt;            from dual;&lt;br/&gt;&lt;br/&gt;            p_msg :=  v_msg;&lt;br/&gt;      END;&lt;br/&gt;--      BEGIN&lt;br/&gt;--        IF lv_PRODUCTID = 0  AND lv_PRODUCTNUMBER != 0&lt;br/&gt;--        THEN&lt;br/&gt;--            XXPBSA_UPDATE_PRODUCT_GUID@DBLINK2(p_data);&lt;br/&gt;--            select &apos;successful operation&apos;&lt;br/&gt;--            into v_msg&lt;br/&gt;--            from dual;&lt;br/&gt;--            &lt;br/&gt;--            p_msg :=  v_msg;&lt;br/&gt;--&lt;br/&gt;--      ELSE&lt;br/&gt;--            &lt;br/&gt;--            select &apos;unsuccessful operation2&apos;&lt;br/&gt;--            into v_msg&lt;br/&gt;--            from dual;&lt;br/&gt;--              &lt;br/&gt;--            p_msg :=  v_msg;&lt;br/&gt;--            &lt;br/&gt;--      END IF;&lt;br/&gt;--&lt;br/&gt;--        EXCEPTION&lt;br/&gt;--          WHEN OTHERS THEN&lt;br/&gt;--            select &apos;unsuccessful operation3&apos;&lt;br/&gt;--            into v_msg&lt;br/&gt;--            from dual;&lt;br/&gt;--              &lt;br/&gt;--            p_msg :=  v_msg;&lt;br/&gt;--      END;&lt;br/&gt;END;</source>
</StoredProcedureOraclev10g>