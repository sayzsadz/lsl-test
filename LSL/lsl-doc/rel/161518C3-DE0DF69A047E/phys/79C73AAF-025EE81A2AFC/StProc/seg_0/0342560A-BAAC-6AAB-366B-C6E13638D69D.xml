<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="XXPBSA_EXECUTE_IMPORT_PRC" directorySegmentName="seg_0" id="0342560A-BAAC-6AAB-366B-C6E13638D69D">
<sourceConnName>LSL_Cloud_apex</sourceConnName>
<sourceObjSchema>APEX</sourceObjSchema>
<sourceObjName>XXPBSA_EXECUTE_IMPORT_PRC</sourceObjName>
<createdBy>sjayasinghe1</createdBy>
<createdTime>2019-04-29 11:48:29 UTC</createdTime>
<ownerDesignName>lsl-doc</ownerDesignName>
<owner>FB5DE12D-4EA4-254B-AA97-4ED35945C6A7</owner>
<source>CREATE OR REPLACE procedure APEX.XXPBSA_EXECUTE_IMPORT_PRC&lt;br/&gt;as&lt;br/&gt;    l_token_type    varchar2(50);&lt;br/&gt;    l_access_token  varchar2(2000);&lt;br/&gt;    p_token_type    varchar2(50);&lt;br/&gt;    p_access_token  varchar2(2000);&lt;br/&gt;    l_response      varchar2(20000);&lt;br/&gt;    l_url           varchar2(100);&lt;br/&gt;    l_https_host    varchar2(100);&lt;br/&gt;    l_wallet_path   varchar2(50);&lt;br/&gt;    sqlstring       varchar2(10000);&lt;br/&gt;&lt;br/&gt;    cursor cur&lt;br/&gt;    is&lt;br/&gt;       select HOST&lt;br/&gt;             ,PORT&lt;br/&gt;             ,BASE_URL&lt;br/&gt;             ,ENDPOINT_URL&lt;br/&gt;             ,PROTOCOL&lt;br/&gt;             ,PROCNAME&lt;br/&gt;             --,&apos;2018-11-13T16:54:17.17+05:30&apos; START_DATE&lt;br/&gt;             --,&apos;2018-11-15T16:54:17.17+05:30&apos; END_DATE&lt;br/&gt;             ,TO_CHAR(SYSTIMESTAMP - INTERVAL &apos;1&apos; DAY, &apos;yyyy-mm-dd&quot;T&quot;HH24:MI:SS.SSTZH:TZM&apos;) START_DATE&lt;br/&gt;             ,TO_CHAR(systimestamp, &apos;yyyy-mm-dd&quot;T&quot;HH24:MI:SS.SSTZH:TZM&apos;) END_DATE&lt;br/&gt;             ,OUTLET&lt;br/&gt;             ,TOKEN_TYPE&lt;br/&gt;             ,ACCESS_TOKEN&lt;br/&gt;             ,URL&lt;br/&gt;             ,HTTPS_HOST&lt;br/&gt;             ,WALLET_PATH&lt;br/&gt;      from XXPBSA_ENDPOINTS xe&lt;br/&gt;          ,XXPBSA_OAUTH xo&lt;br/&gt;      where PROCNAME in (   &apos;create_sales_summary&apos;,&lt;br/&gt;                            &apos;create_returns_summary&apos;, &lt;br/&gt;                            &apos;create_pay_sum_takings&apos;, &lt;br/&gt;                            &apos;create_pay_sum_returns&apos;, &lt;br/&gt;                            --&apos;create_sup_returns_summary&apos;,&lt;br/&gt;                            &apos;create_tills_bank_deposits&apos;,&lt;br/&gt;                            &apos;create_tills_reconciliations&apos;,&lt;br/&gt;                            &apos;create_stock_inter_trans&apos;,&lt;br/&gt;                            --&apos;create_deliveries_summary&apos;,&lt;br/&gt;                            &apos;create_pay_sum_credit&apos;,&lt;br/&gt;                            &apos;create_stock_movement&apos;&lt;br/&gt;                        )&lt;br/&gt;            and store_id = outlet;&lt;br/&gt;--            and TO_CHAR(to_date(substr(sysdate-1,1,10), &apos;DD-MM-YYYY&apos;),&lt;br/&gt;--                         &apos;D&apos;, &apos;NLS_DATE_LANGUAGE=ENGLISH&apos;) in (&apos;4&apos;);&lt;br/&gt;                         --test data for sync&lt;br/&gt;--            and TO_CHAR(to_date(substr(sysdate-1,1,10), &apos;DD-MM-YYYY&apos;),&lt;br/&gt;--                         &apos;D&apos;, &apos;NLS_DATE_LANGUAGE=ENGLISH&apos;) not in (&apos;5&apos;, &apos;6&apos;);&lt;br/&gt;                            --assumption: sync excluding weekends&lt;br/&gt;&lt;br/&gt;begin&lt;br/&gt;    --xxpbsa_request_pbsa_token;&lt;br/&gt;&lt;br/&gt;--    DBMS_OUTPUT.put_line(&apos;Token Type: &apos;||l_token_type);&lt;br/&gt;--    DBMS_OUTPUT.put_line(&apos;Access Token: &apos;||l_access_token);&lt;br/&gt;    &lt;br/&gt;    &lt;br/&gt;        for cur_rec in cur&lt;br/&gt;        loop&lt;br/&gt;        &lt;br/&gt;        begin&lt;br/&gt;        &lt;br/&gt;            l_access_token := cur_rec.ACCESS_TOKEN;&lt;br/&gt;            l_token_type := cur_rec.TOKEN_TYPE;&lt;br/&gt;            l_url := cur_rec.URL;&lt;br/&gt;            l_https_host := cur_rec.HTTPS_HOST;&lt;br/&gt;            l_wallet_path := cur_rec.WALLET_PATH;&lt;br/&gt;        &lt;br/&gt;        select xxpbsa_request_pbsapos_data (  p_url           =&gt; cur_rec.PROTOCOL||cur_rec.HOST||cur_rec.PORT||cur_rec.BASE_URL||cur_rec.ENDPOINT_URL&lt;br/&gt;                                            --, p_token_type    =&gt; l_token_type&lt;br/&gt;                                            --, p_access_token  =&gt; l_access_token&lt;br/&gt;                                            , p_date_from     =&gt; cur_rec.START_DATE&lt;br/&gt;                                            , p_date_to       =&gt; cur_rec.END_DATE&lt;br/&gt;                                            , p_store_id      =&gt; cur_rec.OUTLET&lt;br/&gt;                                           )&lt;br/&gt;        into l_response&lt;br/&gt;        from dual;&lt;br/&gt;    &lt;br/&gt;    &lt;br/&gt;        --sqlstring := cur_rec.PROCNAME || &apos;(&apos; || l_response || &apos;)&apos;;&lt;br/&gt;    &lt;br/&gt;        --dbms_output.put_line(sqlstring);&lt;br/&gt;    &lt;br/&gt;        --execute immediate sqlstring;&lt;br/&gt;    &lt;br/&gt;    &lt;br/&gt;        if cur_rec.PROCNAME = &apos;create_sales_summary&apos;&lt;br/&gt;          then create_sales_summary(l_response, cur_rec.OUTLET);            &lt;br/&gt;          dbms_output.put_line(&apos;create_sales_summary procedure 1.&apos;);&lt;br/&gt;        elsif cur_rec.PROCNAME = &apos;create_returns_summary&apos;&lt;br/&gt;          then create_returns_summary(l_response, cur_rec.OUTLET);&lt;br/&gt;          dbms_output.put_line(&apos;create_returns_summary procedure 2.&apos;);&lt;br/&gt;        elsif cur_rec.PROCNAME = &apos;create_pay_sum_takings&apos;&lt;br/&gt;          then create_pay_sum_takings(l_response);&lt;br/&gt;          dbms_output.put_line(&apos;create_pay_sum_takings procedure 3.&apos;);&lt;br/&gt;        elsif cur_rec.PROCNAME = &apos;create_pay_sum_returns&apos;&lt;br/&gt;          then create_pay_sum_returns(l_response);&lt;br/&gt;          dbms_output.put_line(&apos;create_pay_sum_returns procedure 4&apos;);&lt;br/&gt;        elsif cur_rec.PROCNAME = &apos;create_pay_sum_credit&apos;&lt;br/&gt;          then create_pay_sum_credit(l_response);&lt;br/&gt;          dbms_output.put_line(&apos;create_pay_sum_credit procedure 5.&apos;);--&lt;br/&gt;        elsif cur_rec.PROCNAME = &apos;create_sup_returns_summary&apos;&lt;br/&gt;          then create_supplier_return_summary(l_response);&lt;br/&gt;          dbms_output.put_line(&apos;create_sup_returns_summary procedure 6&apos;);      &lt;br/&gt;        elsif cur_rec.PROCNAME = &apos;create_stock_inter_trans&apos;&lt;br/&gt;          then create_stock_inter_trans(l_response);&lt;br/&gt;          dbms_output.put_line(&apos;create_stock_inter_trans procedure 7&apos;);      &lt;br/&gt;        elsif cur_rec.PROCNAME = &apos;create_stock_movement&apos;&lt;br/&gt;          then create_stock_movement(l_response);&lt;br/&gt;          dbms_output.put_line(&apos;create_stock_movement procedure 8.&apos;);      &lt;br/&gt;        elsif cur_rec.PROCNAME = &apos;create_deliveries_summary&apos;&lt;br/&gt;          then create_deliveries_summary(l_response);&lt;br/&gt;          dbms_output.put_line(&apos;create_deliveries_summary procedure 9.&apos;);      &lt;br/&gt;        elsif cur_rec.PROCNAME = &apos;create_tills_bank_deposits&apos;&lt;br/&gt;          then create_tills_bank_deposits(l_response);&lt;br/&gt;          dbms_output.put_line(&apos;create_tills_bank_deposits procedure 10.&apos;);      &lt;br/&gt;        elsif cur_rec.PROCNAME = &apos;create_tills_reconciliations&apos;&lt;br/&gt;          then create_tills_reconciliations(l_response);&lt;br/&gt;          dbms_output.put_line(&apos;create_tills_reconciliations procedure 11.&apos;);&lt;br/&gt;        else&lt;br/&gt;          dbms_output.put_line(&apos;no procedure&apos;);&lt;br/&gt;        end if;&lt;br/&gt;    &lt;br/&gt;    &lt;br/&gt;        update XXPBSA_ENDPOINTS&lt;br/&gt;        set STATUS = &apos;P&apos;, PARAMETER1 = l_response&lt;br/&gt;        where OUTLET = cur_rec.OUTLET&lt;br/&gt;             and PROCNAME = cur_rec.PROCNAME;&lt;br/&gt;    &lt;br/&gt;        DBMS_OUTPUT.put_line(&apos;detailed error message: &apos;||cur_rec.OUTLET);&lt;br/&gt;    &lt;br/&gt;    &lt;br/&gt;&lt;br/&gt;    exception when others&lt;br/&gt;        then&lt;br/&gt;            DBMS_OUTPUT.put_line(cur_rec.OUTLET);&lt;br/&gt;    end;&lt;br/&gt;    end loop;&lt;br/&gt;&lt;br/&gt;end;</source>
</StoredProcedureOraclev10g>