<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="CREATE_DELIVERIES_SUMMARY" directorySegmentName="seg_0" id="D7465E3D-D642-497D-4D3B-712B3BDF4671">
<sourceConnName>LSL_Cloud_apex</sourceConnName>
<sourceObjSchema>APEX</sourceObjSchema>
<sourceObjName>CREATE_DELIVERIES_SUMMARY</sourceObjName>
<createdBy>sjayasinghe1</createdBy>
<createdTime>2019-04-29 11:48:24 UTC</createdTime>
<ownerDesignName>lsl-doc</ownerDesignName>
<owner>FB5DE12D-4EA4-254B-AA97-4ED35945C6A7</owner>
<source>CREATE OR REPLACE PROCEDURE APEX.CREATE_DELIVERIES_SUMMARY (p_data  IN  CLOB)&lt;br/&gt;AS&lt;br/&gt;&lt;br/&gt;  l_data           varchar2(20000);&lt;br/&gt;  l_buffer         varchar2(32767);&lt;br/&gt;  l_amount         number;&lt;br/&gt;  l_offset         number;&lt;br/&gt;&lt;br/&gt;BEGIN&lt;br/&gt;    l_data := p_data;&lt;br/&gt;    --l_data := &apos;[{&quot;date&quot;:&quot;2018-06-04T00:00:00&quot;,&quot;products&quot;:[{&quot;saleSummaryID&quot;:1,&quot;date&quot;:&quot;2018-06-04T00:00:00&quot;,&quot;productId&quot;:&quot;d06bd7ed-6fe1-4a36-9050-d49d36966b71&quot;,&quot;partNumber&quot;:&quot;000001&quot;,&quot;title&quot;:&quot;Product One&quot;,&quot;avgCostEx&quot;:4.5455,&quot;avgCostTax&quot;:0.4546,&quot;unit&quot;:&quot;Each&quot;,&quot;totalUnits&quot;:1.000,&quot;totalValueEx&quot;:18.1800,&quot;totalValueTax&quot;:1.8200}]}]&apos;;&lt;br/&gt;&lt;br/&gt;--   INSERT INTO deliverysummary (&lt;br/&gt;--                                DeliveryId      ,&lt;br/&gt;--                                PurchaseOrderID   ,&lt;br/&gt;--                                ExternalReferenceNumber       ,&lt;br/&gt;--                                DELIVERYSUMMARYDATE       ,&lt;br/&gt;--                                INVOICENUMBER             ,&lt;br/&gt;--                                Freight      ,&lt;br/&gt;--                                FreightTax           ,&lt;br/&gt;--                                SupplierId&lt;br/&gt;--                              )&lt;br/&gt;--                       SELECT *&lt;br/&gt;--FROM &lt;br/&gt;--     JSON_TABLE(&lt;br/&gt;--     l_data&lt;br/&gt;--     , &apos;$[*]&apos; COLUMNS (&lt;br/&gt;--      DeliveryId number PATH &apos;$.deliveryId&apos;,&lt;br/&gt;--      PurchaseOrderID number PATH &apos;$.purchaseOrderId&apos;,&lt;br/&gt;--      ExternalReferenceNumber varchar2(30) PATH &apos;$.externalReferenceNumber&apos;,&lt;br/&gt;--      DELIVERYSUMMARYDATE varchar2(30) PATH &apos;$.date&apos;,&lt;br/&gt;--      InvoiceNumber varchar2(50) PATH &apos;$.invoiceNumber&apos;,&lt;br/&gt;--      Freight number PATH &apos;$.freight&apos;,&lt;br/&gt;--      FreightTax number PATH &apos;$.freightTax&apos;,&lt;br/&gt;--      SupplierId varchar2(50) PATH &apos;$.supplierId&apos;&lt;br/&gt;--)) JT;&lt;br/&gt;&lt;br/&gt;MERGE INTO deliverysummary D&lt;br/&gt;   USING (SELECT *&lt;br/&gt;FROM &lt;br/&gt;     JSON_TABLE(&lt;br/&gt;     l_data&lt;br/&gt;     , &apos;$[*]&apos; COLUMNS (&lt;br/&gt;      DeliveryId number PATH &apos;$.deliveryId&apos;,&lt;br/&gt;      PurchaseOrderID number PATH &apos;$.purchaseOrderId&apos;,&lt;br/&gt;      ExternalReferenceNumber varchar2(30) PATH &apos;$.externalReferenceNumber&apos;,&lt;br/&gt;      DELIVERYSUMMARYDATE varchar2(30) PATH &apos;$.date&apos;,&lt;br/&gt;      InvoiceNumber varchar2(50) PATH &apos;$.invoiceNumber&apos;,&lt;br/&gt;      Freight number PATH &apos;$.freight&apos;,&lt;br/&gt;      FreightTax number PATH &apos;$.freightTax&apos;,&lt;br/&gt;      SupplierId varchar2(50) PATH &apos;$.supplierId&apos;&lt;br/&gt;)) JT) S&lt;br/&gt;   ON (D.DeliveryId = S.DeliveryId&lt;br/&gt;   )&lt;br/&gt;   WHEN MATCHED THEN UPDATE SET &lt;br/&gt;                                D.PurchaseOrderID = S.PurchaseOrderID,&lt;br/&gt;                                D.ExternalReferenceNumber = S.ExternalReferenceNumber,&lt;br/&gt;                                D.DELIVERYSUMMARYDATE = S.DELIVERYSUMMARYDATE,&lt;br/&gt;                                D.InvoiceNumber = S.InvoiceNumber,&lt;br/&gt;                                D.Freight = S.Freight,&lt;br/&gt;                                D.FreightTax = S.FreightTax,&lt;br/&gt;                                D.SupplierId = S.SupplierId&lt;br/&gt;     DELETE WHERE (&lt;br/&gt;                                D.DeliveryId != S.DeliveryId and&lt;br/&gt;                                D.PurchaseOrderID != S.PurchaseOrderID and &lt;br/&gt;                                D.ExternalReferenceNumber != S.ExternalReferenceNumber and &lt;br/&gt;                                D.DELIVERYSUMMARYDATE != S.DELIVERYSUMMARYDATE and&lt;br/&gt;                                D.InvoiceNumber != S.InvoiceNumber and&lt;br/&gt;                                D.Freight != S.Freight and&lt;br/&gt;                                D.FreightTax != S.FreightTax and &lt;br/&gt;                                D.SupplierId != S.SupplierId&lt;br/&gt;     )&lt;br/&gt;   WHEN NOT MATCHED THEN INSERT (D.DeliveryId,&lt;br/&gt;                                D.PurchaseOrderID,&lt;br/&gt;                                D.ExternalReferenceNumber,&lt;br/&gt;                                D.DELIVERYSUMMARYDATE,&lt;br/&gt;                                D.InvoiceNumber,&lt;br/&gt;                                D.Freight,&lt;br/&gt;                                D.FreightTax,&lt;br/&gt;                                D.SupplierId)&lt;br/&gt;     VALUES (S.DeliveryId,&lt;br/&gt;                                S.PurchaseOrderID,&lt;br/&gt;                                S.ExternalReferenceNumber,&lt;br/&gt;                                S.DELIVERYSUMMARYDATE,&lt;br/&gt;                                S.InvoiceNumber,&lt;br/&gt;                                S.Freight,&lt;br/&gt;                                S.FreightTax,&lt;br/&gt;                                S.SupplierId)&lt;br/&gt;     ;&lt;br/&gt;   &lt;br/&gt;   INSERT INTO deliverysummaryline (&lt;br/&gt;                                DeliveryId      ,&lt;br/&gt;                                DeliveryDetailId   ,&lt;br/&gt;                                ProductId       ,&lt;br/&gt;                                partNumber  ,&lt;br/&gt;                                Title       ,&lt;br/&gt;                                Quantity      ,&lt;br/&gt;                                Unit           ,&lt;br/&gt;                                PerUnitCost       ,&lt;br/&gt;                                PerUnitCostTax      ,&lt;br/&gt;                                LineTotalCost            ,&lt;br/&gt;                                LineTotalCostTax &lt;br/&gt;                              )&lt;br/&gt;                       SELECT *&lt;br/&gt;FROM &lt;br/&gt;     JSON_TABLE(&lt;br/&gt;     l_data&lt;br/&gt;     , &apos;$[*]&apos; COLUMNS (&lt;br/&gt;      DeliveryId varchar2(30) PATH &apos;$.deliveryId&apos;,&lt;br/&gt;              NESTED PATH &apos;$.lines[*]&apos; COLUMNS (&lt;br/&gt;                           &lt;br/&gt;                           DeliveryDetailId   number      PATH &apos;$.deliveryDetailID&apos;,&lt;br/&gt;                                          ProductId       varchar2(50)        PATH &apos;$.productID&apos;,&lt;br/&gt;                                          partNumber       varchar2(20)        PATH &apos;$.partNumber&apos;,&lt;br/&gt;                                          Title       varchar2(300)    PATH &apos;$.title&apos;,&lt;br/&gt;                                          Quantity      varchar2(300)    PATH &apos;$.quantity&apos;,&lt;br/&gt;                                          Unit           varchar2(300)    PATH &apos;$.unit&apos;,&lt;br/&gt;                                          PerUnitCost       number      PATH &apos;$.perUnitCost&apos;,&lt;br/&gt;                                          PerUnitCostTax      number      PATH &apos;$.perUnitCostTax&apos;,&lt;br/&gt;                                          LineTotalCost            varchar(300)     PATH &apos;$.lineTotalCost&apos;,&lt;br/&gt;                                          LineTotalCostTax      number      PATH &apos;$.lineTotalCostTax&apos;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;)) JT;&lt;br/&gt;   &lt;br/&gt;            &lt;br/&gt;            COMMIT;&lt;br/&gt;--&lt;br/&gt;--  l_amount := 32000;&lt;br/&gt;--  l_offset := 1;&lt;br/&gt;--  &lt;br/&gt;--        begin&lt;br/&gt;--            loop&lt;br/&gt;--                dbms_lob.read( l_clob, l_amount, l_offset, l_buffer );&lt;br/&gt;--                htp.p(l_buffer);&lt;br/&gt;--                l_offset := l_offset + l_amount;&lt;br/&gt;--                l_amount := 32000;&lt;br/&gt;--            end loop;&lt;br/&gt;--        exception&lt;br/&gt;--            when no_data_found then&lt;br/&gt;--                DBMS_OUTPUT.put_line(&apos;Message: unsuccessful operation&apos;);c v&lt;br/&gt;--            when others then&lt;br/&gt;--                DBMS_OUTPUT.put_line(SQLERRM);&lt;br/&gt;--        end;&lt;br/&gt;&lt;br/&gt;END;</source>
</StoredProcedureOraclev10g>